let pokemonRepository = (function () {
  let e = [];
  function t() {
    return e;
  }
  function n(t) {
    'object' == typeof t ? e.push(t) : alert('Please enter a Poke obejct');
  }
  function i(e, t) {
    e.addEventListener('click', function () {
      a(t);
    });
  }
  function o(e) {
    return fetch(e.detailsUrl)
      .then(function (e) {
        return e.json();
      })
      .then(function (t) {
        (e.imageFront = t.sprites.front_default),
          (e.imageBack = t.sprites.back_default),
          (e.height = t.height),
          (e.weight = t.weight),
          (e.types = t.types),
          (e.abilities = t.abilities);
      })
      .catch(function (e) {
        console.error(e);
      });
  }
  function a(e) {
    o(e).then(function () {
      let t = $('.modal-title');
      t.empty();
      let n = e.name.charAt(0).toUpperCase() + e.name.slice(1);
      t.append(n);
      let i = $('.modal-body');
      i.empty(),
        i.append(`<img class="modal-image" src="${e.imageFront}">`),
        i.append(`<img class="modal-image" src="${e.imageBack}">`),
        i.append(`<p>Height: ${e.height}</p>`),
        i.append(`<p>Weight: ${e.weight}</p>`);
      let o = e.types,
        a = '';
      for (let l = 0; l < o.length; l++)
        l < o.length - 1
          ? (a += o[l].type.name + ', ')
          : (a += o[l].type.name);
      i.append(`<p>Types: ${a}</p>`);
      let s = e.abilities,
        r = '';
      for (let p = 0; p < s.length; p++)
        p < s.length - 1
          ? (r += s[p].ability.name + ', ')
          : (r += s[p].ability.name);
      i.append(`<p>Abilities: ${r}</p>`);
    });
  }
  function l() {
    document
      .querySelector('#modal-container')
      .classList.remove('is-visible');
  }
  return (
    window.addEventListener('keydown', (e) => {
      let t = document.querySelector('#modal-container');
      'Escape' === e.key && t.classList.contains('is-visible') && l();
    }),
    {
      getAll: t,
      add: n,
      addListItem: function e(t) {
        let n = t.name,
          o = n.charAt(0).toUpperCase() + n.slice(1),
          a = document.querySelector('ul');
        a.classList.add('list-group', 'list-group-horizontal');
        let l = document.createElement('li');
        l.classList.add('group-list-item');
        let s = document.createElement('button');
        (s.innerText = o),
          s.classList.add(
            'poke-button',
            'show-modal',
            'btn',
            'btn-primary'
          ),
          s.setAttribute('data-toggle', 'modal'),
          s.setAttribute('data-target', '.modal'),
          l.appendChild(s),
          a.appendChild(l),
          i(s, t);
      },
      addListener: i,
      loadList: function e() {
        return fetch('https://pokeapi.co/api/v2/pokemon/?limit=1000')
          .then(function (e) {
            return e.json();
          })
          .then(function (e) {
            e.results.forEach(function (e) {
              n({ name: e.name, detailsUrl: e.url });
            });
          })
          .catch(function (e) {
            console.error(e);
          });
      },
      loadDetails: o,
      showModal: a,
      hideModal: l,
    }
  );
})();
pokemonRepository.loadList().then(function () {
  pokemonRepository.getAll().forEach(function (e) {
    pokemonRepository.addListItem(e);
  });
});
